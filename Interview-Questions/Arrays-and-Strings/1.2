Check Permutation: Given two strings, write a method to decide if one is a permutation of the
other. 

#1 O(nlogn)
String sort(String s){
    char[] content = s.toCharArray();
    java.util.Arrays.sort(content);
    return new String(content);
}
boolean Permutation(String s, String t){
    if(s.length()!=t.length()) {
        return false;
    } 
    return sort(s).equals(sort(t));
}

#2 O(n)
boolean Permutation(String s, String t){
    if(s.length()!=t.length()) {
        return false;
    }
    int[] letters = net int[128];
    for(int i=0; i<s.length(); i++){
        letters[s.chatAt(i)]++;
    }

    for(int i=0; i<t.length(); i++){
        letters[t.chatAt(i)]--;
        if(letters[t.chatAt(i)]<0)
            return false;
    }
    return true; 
}