 Intersection: Given two (singly) linked lists, determine if the two lists intersect. 
 Return the interÂ­ secting node. Note that the intersection is defined based on reference, 
 not value.That is, if the kth node of the first linked list is the exact same node 
 (by reference) as the jth node of the second linked list, then they are intersecting.

 #O(A+B)

 LinkedListNode findIntersection(LinkedListNode list1, LinkedListNode list2){
     if(l1==null || l2==null) return null;
     Result result1 = getTailAndSize(l1);
     Result result2 = getTailAndSize(l2);

     if(result1.tail != result2.tail){
         return null;
     }

     LinkedListNode shorter = result1.size < result2.size? list1 : list2;
     LinkedListNode longer = result1.size < result2.size? list2: list1;

     longer = getKthNode(longer, Math.abs(result1.size-result2.size));
     while(longer!=shorter){
         longer= longer.next;
         shorter = shorter.next;
     }

     return longer;
 }

 class Result(
     public LinkedListNode tail;
     public int size;
     public Result(LinkedListNode tail, int size){
         this.tail = tail;
         this.size = size;
     }
 )